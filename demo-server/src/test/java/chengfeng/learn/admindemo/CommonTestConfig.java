package chengfeng.learn.admindemo;

import org.springframework.boot.SpringBootConfiguration;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.domain.EntityScan;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.PropertySource;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;

import chengfeng.learn.admindemo.repo.ext.BaseJpaRepositoryImpl;

@SpringBootConfiguration
@EntityScan("chengfeng.learn.admindemo.entity")
@ComponentScan({"chengfeng.learn.admindemo.repo","chengfeng.learn.admindemo.service"})
//@ComponentScan(excludeFilters = @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = CommandLineRunner.class))
//if we want to bypass running command line runner add exclude filter
//@Configuration
@EnableAutoConfiguration
//@EnableJpaRepositories({"chengfeng.learn.admindemo.repo"})
//if add repositoryBaseClass , the auto-generated by Spring will use that base class as implementation of interface
//@EnableJpaRepositories(basePackages={"chengfeng.learn.admindemo.repo","chengfeng.learn.admindemo.repo.ext"},repositoryBaseClass=BaseJpaRepositoryImpl.class)
@EnableJpaRepositories(basePackages={"chengfeng.learn.admindemo.repo"},repositoryBaseClass=BaseJpaRepositoryImpl.class)
@PropertySource(value = "classpath:application-dev.properties") // can change to other property file other than the default one
//@Sql
public class CommonTestConfig {

}
